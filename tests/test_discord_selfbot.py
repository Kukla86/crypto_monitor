#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Discord Selfbot Monitor
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
"""

import asyncio
import os
from discord_selfbot_monitor import DiscordSelfbotMonitor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('config.env')

async def test_discord_selfbot():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Discord selfbot"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Discord Selfbot Monitor...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–Ω–∏—Ç–æ—Ä–∞
    monitor = DiscordSelfbotMonitor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    print(f"   Discord Token: {'‚úÖ' if monitor.discord_token else '‚ùå'}")
    print(f"   OpenAI API Key: {'‚úÖ' if monitor.openai_api_key else '‚ùå'}")
    print(f"   Telegram Bot Token: {'‚úÖ' if monitor.telegram_bot_token else '‚ùå'}")
    print(f"   Telegram Chat ID: {'‚úÖ' if monitor.telegram_chat_id else '‚ùå'}")
    print(f"   Target Channels: {len(monitor.target_channels)} –∫–∞–Ω–∞–ª–æ–≤")
    
    if not monitor.discord_token:
        print("\n‚ùå DISCORD_USER_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ config.env:")
        print("DISCORD_USER_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å")
        return
    
    if not monitor.openai_api_key:
        print("\n‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ config.env:")
        print("OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å")
        return
    
    # –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Å—Å–∏—é
    import aiohttp
    monitor.session = aiohttp.ClientSession(headers=monitor.headers)
    
    try:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª–∞–º:")
        
        for channel_id in monitor.target_channels:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
                channel_name = await monitor.get_channel_name(channel_id)
                print(f"   –ö–∞–Ω–∞–ª {channel_id}: {channel_name}")
                
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
                url = f"https://discord.com/api/v9/channels/{channel_id}/messages?limit=1"
                async with monitor.session.get(url) as response:
                    if response.status == 200:
                        messages = await response.json()
                        print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω, —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ {response.status}: {response.reason}")
                        
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –∫–∞–Ω–∞–ª–∞ {channel_id}: {e}")
        
        print(f"\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenAI:")
        if monitor.openai_api_key:
            try:
                # –¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
                test_content = "üöÄ BIG ANNOUNCEMENT! We're launching mainnet next month with airdrop for early supporters!"
                analysis = await monitor.analyze_with_openai(test_content, "test_user", "test_channel")
                
                if analysis:
                    print(f"   ‚úÖ OpenAI —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    print(f"   –í–∞–∂–Ω–æ—Å—Ç—å: {analysis.get('importance', 'N/A')}/10")
                    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {analysis.get('category', 'N/A')}")
                    print(f"   –†–µ–∑—é–º–µ: {analysis.get('summary_ru', 'N/A')}")
                else:
                    print(f"   ‚ùå OpenAI –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")
        
        print(f"\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram:")
        if monitor.telegram_bot_token and monitor.telegram_chat_id:
            try:
                # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                test_message = "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Discord Selfbot Monitor"
                telegram_url = f"https://api.telegram.org/bot{monitor.telegram_bot_token}/sendMessage"
                payload = {
                    'chat_id': monitor.telegram_chat_id,
                    'text': test_message,
                    'parse_mode': 'Markdown'
                }
                
                async with monitor.session.post(telegram_url, json=payload) as response:
                    if response.status == 200:
                        print(f"   ‚úÖ Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ Telegram: {response.status}")
                        
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
        else:
            print(f"   ‚ö†Ô∏è Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print(f"python discord_selfbot_monitor.py")
        
    finally:
        await monitor.session.close()

if __name__ == "__main__":
    asyncio.run(test_discord_selfbot()) 