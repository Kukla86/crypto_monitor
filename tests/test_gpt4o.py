#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã GPT-4o (GPT-4 Omni)
"""

import asyncio
import logging
from config import get_config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_gpt4_analysis():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å GPT-4"""
    try:
        from monitor import analyze_with_chatgpt
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
        test_prompt = """
        –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Discord —Å–µ—Ä–≤–µ—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:

        –°–µ—Ä–≤–µ—Ä: Fuel Network Official
        –ö–∞–Ω–∞–ª: announcements
        –°–æ–æ–±—â–µ–Ω–∏–µ: üöÄ ANNOUNCEMENT: FUEL Network mainnet launch is scheduled for next week! Get ready for the biggest event in crypto history!

        –û—Ü–µ–Ω–∏ –≤–∞–∂–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç FUEL –∏ ARC:

        –ö–†–ò–¢–ï–†–ò–ò –í–ê–ñ–ù–û–°–¢–ò:
        - CRITICAL: –∞–Ω–æ–Ω—Å—ã —Ä–µ–ª–∏–∑–æ–≤, –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        - HIGH: –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞, –ª–∏—Å—Ç–∏–Ω–≥–∏, –≤–∞–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        - MEDIUM: –æ–±—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –æ–±—Å—É–∂–¥–µ–Ω–∏—è, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏
        - LOW: –æ–±—ã—á–Ω—ã–µ —á–∞—Ç—ã, –º–µ–º—ã, —Å–ø–∞–º

        –û—Ç–≤–µ—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
        {
            "should_alert": true/false,
            "level": "CRITICAL/HIGH/MEDIUM/LOW",
            "reason": "–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"
        }
        """
        
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º GPT-4o –∞–Ω–∞–ª–∏–∑...")
        
        response = await analyze_with_chatgpt(test_prompt, "gpt4_test")
        
        if response and 'choices' in response:
            content = response['choices'][0]['message']['content']
            logger.info(f"‚úÖ GPT-4o –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:")
            logger.info(f"üìù –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {content[:200]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ JSON (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º markdown —Ñ–æ—Ä–º–∞—Ç)
            import json
            import re
            
            try:
                # –£–±–∏—Ä–∞–µ–º markdown –æ–±—Ä–∞–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
                cleaned_content = content.strip()
                if cleaned_content.startswith('```json'):
                    cleaned_content = cleaned_content[7:]  # –£–±–∏—Ä–∞–µ–º ```json
                if cleaned_content.startswith('```'):
                    cleaned_content = cleaned_content[3:]  # –£–±–∏—Ä–∞–µ–º ```
                if cleaned_content.endswith('```'):
                    cleaned_content = cleaned_content[:-3]  # –£–±–∏—Ä–∞–µ–º ```
                
                cleaned_content = cleaned_content.strip()
                
                analysis = json.loads(cleaned_content)
                logger.info(f"‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:")
                logger.info(f"  should_alert: {analysis.get('should_alert')}")
                logger.info(f"  level: {analysis.get('level')}")
                logger.info(f"  reason: {analysis.get('reason', '–ù–µ—Ç')}")
                return True
            except json.JSONDecodeError:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {content}")
                return False
        else:
            logger.error("‚ùå GPT-4 –Ω–µ –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ GPT-4o: {e}")
        return False

async def test_gpt4_github_analysis():
    """–¢–µ—Å—Ç GitHub –∞–Ω–∞–ª–∏–∑–∞ —Å GPT-4o"""
    try:
        from monitor import analyze_github_changes_with_ai
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–∏—Ç–∞
        commit_data = {
            'sha': 'test123abc456',
            'commit': {
                'message': 'feat: implement critical security fix for token transfers',
                'author': {
                    'name': 'Security Team',
                    'email': 'security@fuellabs.com',
                    'date': '2024-01-15T10:30:00Z'
                }
            },
            'author': {
                'login': 'security-team'
            },
            'stats': {
                'additions': 100,
                'deletions': 50,
                'total': 150
            },
            'files': [
                {
                    'filename': 'src/security/TokenTransfer.sol',
                    'additions': 80,
                    'deletions': 30
                }
            ]
        }
        
        repo_info = {
            'owner': 'FuelLabs',
            'repo': 'fuel-core'
        }
        
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º GPT-4o GitHub –∞–Ω–∞–ª–∏–∑...")
        
        result = await analyze_github_changes_with_ai(commit_data, repo_info)
        
        logger.info(f"‚úÖ GPT-4o GitHub –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        logger.info(f"  importance: {result.get('importance')}")
        logger.info(f"  impact: {result.get('impact')}")
        logger.info(f"  should_alert: {result.get('should_alert')}")
        logger.info(f"  summary: {result.get('summary', '–ù–µ—Ç')}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ GPT-4o GitHub –∞–Ω–∞–ª–∏–∑–∞: {e}")
        return False

async def test_gpt4_discord_analysis():
    """–¢–µ—Å—Ç Discord –∞–Ω–∞–ª–∏–∑–∞ —Å GPT-4o"""
    try:
        from monitor import analyze_discord_message_with_ai
        
        test_message = "üöÄ ANNOUNCEMENT: ARC token will be listed on Binance next month! This is huge for our community!"
        
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º GPT-4o Discord –∞–Ω–∞–ª–∏–∑...")
        
        result = await analyze_discord_message_with_ai(
            test_message, 
            "ARC Community", 
            "announcements"
        )
        
        logger.info(f"‚úÖ GPT-4o Discord –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        logger.info(f"  should_alert: {result.get('should_alert')}")
        logger.info(f"  level: {result.get('level')}")
        logger.info(f"  reason: {result.get('reason', '–ù–µ—Ç')}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ GPT-4o Discord –∞–Ω–∞–ª–∏–∑–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT-4o...")
    
    # –¢–µ—Å—Ç 1: –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑
    logger.info("\n--- –¢–ï–°–¢ 1: –û–±—â–∏–π GPT-4o –∞–Ω–∞–ª–∏–∑ ---")
    general_ok = await test_gpt4_analysis()
    
    await asyncio.sleep(2)
    
    # –¢–µ—Å—Ç 2: GitHub –∞–Ω–∞–ª–∏–∑
    logger.info("\n--- –¢–ï–°–¢ 2: GitHub –∞–Ω–∞–ª–∏–∑ —Å GPT-4o ---")
    github_ok = await test_gpt4_github_analysis()
    
    await asyncio.sleep(2)
    
    # –¢–µ—Å—Ç 3: Discord –∞–Ω–∞–ª–∏–∑
    logger.info("\n--- –¢–ï–°–¢ 3: Discord –∞–Ω–∞–ª–∏–∑ —Å GPT-4o ---")
    discord_ok = await test_gpt4_discord_analysis()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    logger.info("\n--- –†–ï–ó–£–õ–¨–¢–ê–¢–´ ---")
    logger.info(f"–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑: {'‚úÖ –£–°–ü–ï–•' if general_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    logger.info(f"GitHub –∞–Ω–∞–ª–∏–∑: {'‚úÖ –£–°–ü–ï–•' if github_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    logger.info(f"Discord –∞–Ω–∞–ª–∏–∑: {'‚úÖ –£–°–ü–ï–•' if discord_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    if general_ok and github_ok and discord_ok:
        logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã GPT-4o –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("üí° GPT-4o —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö")
    else:
        logger.error("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã GPT-4o –Ω–µ –ø—Ä–æ—à–ª–∏")

if __name__ == "__main__":
    asyncio.run(main()) 